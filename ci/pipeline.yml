---
groups:
  - name: all
    jobs:
    - build-opensearch-release
    - test-opensearch-for-cloudfoundry-release
    - build-opensearch-for-cloudfoundry-release
    - deploy-opensearch-development
    - check-backup-development-tenant
    - check-backup-development-platform
    - smoke-tests-development
    - smoke-tests-login-development
    - deploy-opensearch-staging
    - check-backup-staging-platform
    - check-backup-staging-tenant
    - smoke-tests-staging
    - smoke-tests-login-staging
    - deploy-opensearch-production
    - check-backup-production-tenant
    - check-backup-production-platform
    - smoke-tests-production
    - smoke-tests-login-production
    - deploy-opensearch-platform-development
    - smoke-tests-platform-development
    - deploy-opensearch-platform-staging
    - smoke-tests-platform-staging
    - deploy-opensearch-platform-production
    - smoke-tests-platform-production
  - name: build-releases
    jobs:
    - build-opensearch-release
    - test-opensearch-for-cloudfoundry-release
    - build-opensearch-for-cloudfoundry-release
  - name: tenant-development
    jobs:
    - deploy-opensearch-development
    - check-backup-development-tenant
    - smoke-tests-development
    - smoke-tests-login-development
  - name: platform-development
    jobs:
    - deploy-opensearch-platform-development
    - smoke-tests-platform-development
    - check-backup-development-platform
  - name: tenant-staging
    jobs:
    - deploy-opensearch-staging
    - check-backup-staging-tenant
    - smoke-tests-staging
    - smoke-tests-login-staging
  - name: platform-staging
    jobs:
    - deploy-opensearch-platform-staging
    - smoke-tests-platform-staging
    - check-backup-staging-platform
  - name: tenant-production
    jobs:
    - deploy-opensearch-production
    - check-backup-production-tenant
    - smoke-tests-production
    - smoke-tests-login-production
  - name: platform-production
    jobs:
    - deploy-opensearch-platform-production
    - smoke-tests-platform-production
    - check-backup-production-platform
  - name: tenant
    jobs:
    - deploy-opensearch-development
    - check-backup-development-tenant
    - smoke-tests-development
    - smoke-tests-login-development
    - deploy-opensearch-staging
    - check-backup-staging-tenant
    - smoke-tests-staging
    - smoke-tests-login-staging
    - deploy-opensearch-production
    - check-backup-production-tenant
    - smoke-tests-production
    - smoke-tests-login-production
  - name: platform
    jobs:
    - deploy-opensearch-platform-development
    - smoke-tests-platform-development
    - check-backup-development-platform
    - deploy-opensearch-platform-staging
    - smoke-tests-platform-staging
    - check-backup-staging-platform
    - deploy-opensearch-platform-production
    - smoke-tests-platform-production
    - check-backup-production-platform

jobs:
- name: build-opensearch-release
  plan:
  - in_parallel:
    - get: release-git-repo
      resource: opensearch-release-git-repo
      trigger: true
    - get: pipeline-tasks
    - get: final-builds-dir-tarball
      resource: opensearch-final-builds-dir-tarball
    - get: releases-dir-tarball
      resource: opensearch-releases-dir-tarball
  - task: finalize-release
    file: pipeline-tasks/finalize-bosh-release.yml
    tags: [iaas]
    params:
      PRIVATE_YML_CONTENT: |-
        ---
        blobstore:
          options:
            region: ((aws-region))
            bucket_name: ((cg-s3-blobstore-bucket))
            credentials_source: env_or_profile
            server_side_encryption: AES256
  - in_parallel:
    - put: opensearch-release
      tags: [iaas]
      params:
        file: finalized-release/opensearch-*.tgz
    - put: opensearch-final-builds-dir-tarball
      tags: [iaas]
      params:
        file: finalized-release/final-builds-dir-opensearch.tgz
    - put: opensearch-releases-dir-tarball
      tags: [iaas]
      params:
        file: finalized-release/releases-dir-opensearch.tgz

- name: test-opensearch-for-cloudfoundry-release
  plan:
  - in_parallel:
    - get: release-git-repo
      resource: opensearch-for-cloudfoundry-release-git-repo
      trigger: true
  - task: run-tests
    config:
      inputs:
      - name: release-git-repo
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: node
          tag: lts
      run:
        path: sh
        args:
          - -exc
          - cd release-git-repo/src/opensearch_dashboards-cf_authentication && npm install && npm test
  on_failure:
    put: slack
    params: &slack-params
      text: |
        :x: FAILED to pass tests for the latest update to opensearch-for-cloudfoundry
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: '#cg-platform-news'
      username: ((slack-username))
      icon_url: ((slack-icon-url))
  on_success:
    put: slack
    params:
      <<: *slack-params
      text: |
        :white_check_mark: Successfully passed tests for the latest update to opensearch-for-cloudfoundry
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>

- name: build-opensearch-for-cloudfoundry-release
  plan:
  - in_parallel:
    - get: release-git-repo
      resource: opensearch-for-cloudfoundry-release-git-repo
      passed: [test-opensearch-for-cloudfoundry-release]
      trigger: true
    - get: pipeline-tasks
    - get: final-builds-dir-tarball
      resource: opensearch-for-cloudfoundry-final-builds-dir-tarball
    - get: releases-dir-tarball
      resource: opensearch-for-cloudfoundry-releases-dir-tarball
  - task: finalize-release
    file: pipeline-tasks/finalize-bosh-release.yml
    tags: [iaas]
    params:
      PRIVATE_YML_CONTENT: |-
        ---
        blobstore:
          options:
            region: ((aws-region))
            bucket_name: ((cg-s3-blobstore-bucket))
            credentials_source: env_or_profile
            server_side_encryption: AES256
  - in_parallel:
    - put: opensearch-for-cloudfoundry-release
      tags: [iaas]
      params:
        file: finalized-release/opensearch-for-cloudfoundry-*.tgz
    - put: opensearch-for-cloudfoundry-final-builds-dir-tarball
      tags: [iaas]
      params:
        file: finalized-release/final-builds-dir-opensearch-for-cloudfoundry.tgz
    - put: opensearch-for-cloudfoundry-releases-dir-tarball
      tags: [iaas]
      params:
        file: finalized-release/releases-dir-opensearch-for-cloudfoundry.tgz

- name: deploy-opensearch-platform-development
  serial_groups: [bosh-platform-development]
  plan:
  - in_parallel:
    - get: common-development
    - get: pipeline-tasks
    - get: opensearch-config
      trigger: true
    - get: common-secrets
      resource: common-platform-development
      trigger: true
    - get: opensearch-for-cloudfoundry-release
      trigger: true
    - get: opensearch-release
      trigger: true
    - get: prometheus-release
      trigger: true
    - get: oauth2-proxy-release
      trigger: true
    - get: secureproxy-release
      trigger: true
    - get: opensearch-platform-stemcell-jammy
      trigger: true
    - get: terraform-yaml
      resource: terraform-yaml-development
      trigger: true
  - task: opensearch-manifest
    config: &manifest-config
      platform: linux
      image_resource:
        type: registry-image
        source:
          aws_access_key_id: ((ecr_aws_key))
          aws_secret_access_key: ((ecr_aws_secret))
          repository: harden-concourse-task
          aws_region: us-gov-west-1
          tag: ((harden-concourse-task-tag))
      inputs:
      - name: opensearch-config
      - name: common-secrets
      - name: terraform-yaml
      run:
        path: sh
        args:
        - -exc
        - |
          SPRUCE_FILE_BASE_PATH=opensearch-config spruce merge \
            --prune terraform_outputs \
            opensearch-config/opensearch-platform-deployment.yml \
            opensearch-config/opensearch-platform-jobs.yml \
            common-secrets/opensearch-platform-development.yml \
            opensearch-config/opensearch-platform-development.yml \
            terraform-yaml/state.yml \
            > opensearch-manifest/manifest.yml
      outputs:
      - name: opensearch-manifest
      params:
        CF_USERNAME: ((cf-username-development))
        CF_PASSWORD: ((cf-password-development))
        CF_SYSTEM_DOMAIN: ((cf-system-domain-development))
  - put: opensearch-platform-development-deployment
    params: &deploy-params-platform
      manifest: opensearch-manifest/manifest.yml
      releases:
      - opensearch-release/*.tgz
      - opensearch-for-cloudfoundry-release/*.tgz
      - prometheus-release/*.tgz
      - oauth2-proxy-release/*.tgz
      - secureproxy-release/*.tgz
      stemcells:
      - opensearch-platform-stemcell-jammy/*.tgz
  on_failure:
    put: slack
    params:
      <<: *slack-params
      text: |
        :x: FAILED to deploy platform opensearch on development
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
  on_success:
    put: slack
    params:
      <<: *slack-params
      text: |
        :white_check_mark: Successfully deployed platform opensearch on development
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>

- name: smoke-tests-platform-development
  serial_groups: [bosh-platform-development]
  plan:
  - in_parallel:
    - get: common
      resource: master-bosh-root-cert
    - get: pipeline-tasks
    - get: tests-timer
      trigger: true
    - get: prometheus-release
      trigger: true
      passed: [deploy-opensearch-platform-development]
    - get: oauth2-proxy-release
      trigger: true
      passed: [deploy-opensearch-platform-development]
    - get: secureproxy-release
      trigger: true
      passed: [deploy-opensearch-platform-development]
    - get: opensearch-release
      trigger: true
      passed: [deploy-opensearch-platform-development]
    - get: opensearch-for-cloudfoundry-release
      trigger: true
      passed: [deploy-opensearch-platform-development]
    - get: opensearch-platform-stemcell-jammy
      trigger: true
      passed: [deploy-opensearch-platform-development]
    - get: opensearch-config
      trigger: true
      passed: [deploy-opensearch-platform-development]
  - task: smoke-tests
    file: pipeline-tasks/bosh-errand.yml
    params:
      BOSH_ENVIRONMENT: ((bosh.development.environment))
      BOSH_CLIENT: ((bosh.development.client))
      BOSH_CLIENT_SECRET: ((bosh.development.client-secret))
      BOSH_DEPLOYMENT: ((opensearch-platform.development.name))
      BOSH_ERRAND: ((opensearch-platform.development.smoke-tests))
      BOSH_FLAGS: "--keep-alive"
      BOSH_CA_CERT: common/master-bosh.crt
  on_failure:
    put: slack
    params:
      <<: *slack-params
      text: |
        :x: Smoke tests for platform opensearch on development FAILED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
  on_success:
    put: slack
    params:
      <<: *slack-params
      channel: '#cg-platform-news'
      text: |
        :white_check_mark: Smoke tests for platform opensearch on development PASSED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>

- name: deploy-opensearch-development
  serial_groups: [bosh-development]
  plan:
  - in_parallel:
    - get: pipeline-tasks
    - get: common-secrets
      resource: common-development
      trigger: true
    - get: opensearch-config
      trigger: true
    - get: opensearch-for-cloudfoundry-release
      trigger: true
    - get: opensearch-release
      trigger: true
    - get: opensearch-stemcell-jammy
      trigger: true
    - get: terraform-yaml
      resource: terraform-yaml-development
    - get: prometheus-release
      trigger: true
    - get: oauth2-proxy-release
      trigger: true
    - get: secureproxy-release
      trigger: true
  - task: opensearch-manifest
    config:
      <<: *manifest-config
      run:
        path: sh
        args:
        - -exc
        - |
          SPRUCE_FILE_BASE_PATH=opensearch-config spruce merge \
            --prune terraform_outputs \
            opensearch-config/opensearch-deployment.yml \
            opensearch-config/opensearch-jobs.yml \
            common-secrets/opensearch-development.yml \
            opensearch-config/opensearch-development.yml \
            terraform-yaml/state.yml \
            > opensearch-manifest/manifest.yml
      outputs:
      - name: opensearch-manifest
      params:
        CF_USERNAME: ((cf-username-development))
        CF_PASSWORD: ((cf-password-development))
        CF_SYSTEM_DOMAIN: ((cf-system-domain-development))
  - put: opensearch-development-deployment
    params: &deploy-params
      manifest: opensearch-manifest/manifest.yml
      releases:
      - opensearch-release/*.tgz
      - opensearch-for-cloudfoundry-release/*.tgz
      - prometheus-release/*.tgz
      stemcells:
      - opensearch-stemcell-jammy/*.tgz
      ops_files:
      - opensearch-config/nats-tls-dev.yml
  on_failure:
    put: slack
    params: &slack-params
      text: |
        :x: FAILED to deploy opensearch on development
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: '#cg-platform-news'
      username: ((slack-username))
      icon_url: ((slack-icon-url))
  on_success:
    put: slack
    params:
      <<: *slack-params
      text: |
        :white_check_mark: Successfully deployed opensearch on development
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>

- name: smoke-tests-development
  serial_groups: [bosh-development]
  plan:
  - in_parallel:
    - get: tests-timer
      trigger: true
    - get: common
      resource: master-bosh-root-cert
    - get: pipeline-tasks
    - get: prometheus-release
      trigger: true
      passed: [deploy-opensearch-development]
    - get: oauth2-proxy-release
      trigger: true
      passed: [deploy-opensearch-development]
    - get: secureproxy-release
      trigger: true
      passed: [deploy-opensearch-development]
    - get: opensearch-for-cloudfoundry-release
      trigger: true
      passed: [deploy-opensearch-development]
    - get: opensearch-release
      trigger: true
      passed: [deploy-opensearch-development]
    - get: opensearch-stemcell-jammy
      trigger: true
      passed: [deploy-opensearch-development]
    - get: opensearch-config
      passed: [deploy-opensearch-development]
      trigger: true
  - task: smoke-tests
    file: pipeline-tasks/bosh-errand.yml
    params:
      BOSH_ENVIRONMENT: ((bosh.development.environment))
      BOSH_CLIENT: ((bosh.development.client))
      BOSH_CLIENT_SECRET: ((bosh.development.client-secret))
      BOSH_DEPLOYMENT: ((opensearch.development.name))
      BOSH_ERRAND: ((opensearch.development.smoke-tests))
      BOSH_FLAGS: "--keep-alive"
      BOSH_CA_CERT: common/master-bosh.crt
  on_failure:
    put: slack
    params:
      <<: *slack-params
      text: |
        :x: Smoke tests for opensearch on development FAILED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
  on_success:
    put: slack
    params:
      <<: *slack-params
      channel: '#cg-platform-news'
      text: |
        :white_check_mark: Smoke tests for opensearch on development PASSED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>

- name: smoke-tests-login-development
  serial_groups: [bosh-development]
  plan:
  - in_parallel:
    - get: pipeline-tasks
    - get: opensearch-for-cloudfoundry-release
      trigger: true
      passed: [deploy-opensearch-development]
    - get: opensearch-release
      trigger: true
      passed: [deploy-opensearch-development]
    - get: opensearch-stemcell-jammy
      trigger: true
      passed: [deploy-opensearch-development]
    - get: opensearch-config
      passed: [deploy-opensearch-development]
      trigger: true
    - get: opensearch-development-deployment
      trigger: true
    - get: prometheus-release
      trigger: true
      passed: [deploy-opensearch-development]
    - get: oauth2-proxy-release
      trigger: true
      passed: [deploy-opensearch-development]
    - get: secureproxy-release
      trigger: true
      passed: [deploy-opensearch-development]
    - get: tests-timer
      trigger: true
  - task: smoke-tests-login
    file: opensearch-config/ci/smoke-tests-login.yml
    params:
      CF_USERNAME: ((cf-username-development))
      CF_PASSWORD: ((cf-password-development))
      CF_SYSTEM_DOMAIN: ((cf-system-domain-development))
  on_failure:
    put: slack
    params:
      <<: *slack-params
      text: |
        :x: Login smoke tests for opensearch on development FAILED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
  on_success:
    put: slack
    params:
      <<: *slack-params
      channel: '#cg-platform-news'
      text: |
        :white_check_mark: Login smoke tests for opensearch on development PASSED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>

- name: deploy-opensearch-platform-staging
  serial_groups: [bosh-platform-staging]
  plan:
  - in_parallel:
    - get: pipeline-tasks
    - get: common-secrets
      resource: common-platform-staging
      trigger: true
    - get: opensearch-config
      trigger: true
      passed: [smoke-tests-platform-development]
    - get: opensearch-release
      trigger: true
      passed: [smoke-tests-platform-development]
    - get: opensearch-for-cloudfoundry-release
      trigger: true
      passed: [smoke-tests-platform-development]
    - get: prometheus-release
      trigger: true
      passed: [smoke-tests-platform-development]
    - get: oauth2-proxy-release
      trigger: true
      passed: [smoke-tests-platform-development]
    - get: secureproxy-release
      trigger: true
      passed: [smoke-tests-platform-development]
    - get: opensearch-platform-stemcell-jammy
      trigger: true
      passed: [smoke-tests-platform-development]
    - get: terraform-yaml
      resource: terraform-yaml-staging
      trigger: true
  - task: opensearch-manifest
    config:
      <<: *manifest-config
      run:
        path: sh
        args:
        - -exc
        - |
          SPRUCE_FILE_BASE_PATH=opensearch-config spruce merge \
            --prune terraform_outputs \
            opensearch-config/opensearch-platform-deployment.yml \
            opensearch-config/opensearch-platform-jobs.yml \
            common-secrets/opensearch-platform-staging.yml \
            opensearch-config/opensearch-platform-staging.yml \
            terraform-yaml/state.yml \
            > opensearch-manifest/manifest.yml
      outputs:
      - name: opensearch-manifest
      params:
        CF_USERNAME: ((cf-username-staging))
        CF_PASSWORD: ((cf-password-staging))
        CF_SYSTEM_DOMAIN: ((cf-system-domain-staging))
  - put: opensearch-platform-staging-deployment
    params: *deploy-params-platform
  on_failure:
    put: slack
    params:
      <<: *slack-params
      text: |
        :x: FAILED to deploy platform opensearch on staging
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
  on_success:
    put: slack
    params:
      <<: *slack-params
      text: |
        :white_check_mark: Successfully deployed platform opensearch on staging
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>

- name: smoke-tests-platform-staging
  serial_groups: [bosh-platform-staging]
  plan:
  - in_parallel:
    - get: common
      resource: master-bosh-root-cert
    - get: pipeline-tasks
    - get: opensearch-config
      trigger: true
      passed: [deploy-opensearch-platform-staging]
    - get: opensearch-release
      trigger: true
      passed: [deploy-opensearch-platform-staging]
    - get: opensearch-for-cloudfoundry-release
      trigger: true
      passed: [deploy-opensearch-platform-staging]
    - get: prometheus-release
      trigger: true
      passed: [deploy-opensearch-platform-staging]
    - get: oauth2-proxy-release
      trigger: true
      passed: [deploy-opensearch-platform-staging]
    - get: secureproxy-release
      trigger: true
      passed: [deploy-opensearch-platform-staging]
    - get: opensearch-platform-stemcell-jammy
      trigger: true
      passed: [deploy-opensearch-platform-staging]
    - get: opensearch-platform-staging-deployment
      trigger: true
    - get: tests-timer
      trigger: true
  - task: smoke-tests
    file: pipeline-tasks/bosh-errand.yml
    params:
      BOSH_ENVIRONMENT: ((bosh.staging.environment))
      BOSH_CLIENT: ((bosh.staging.client))
      BOSH_CLIENT_SECRET: ((bosh.staging.client-secret))
      BOSH_DEPLOYMENT: ((opensearch-platform.staging.name))
      BOSH_ERRAND: ((opensearch-platform.staging.smoke-tests))
      BOSH_FLAGS: "--keep-alive"
      BOSH_CA_CERT: common/master-bosh.crt
  on_failure:
    put: slack
    params:
      <<: *slack-params
      text: |
        :x: Smoke tests for platform opensearch on staging FAILED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
  on_success:
    put: slack
    params:
      <<: *slack-params
      channel: '#cg-platform-news'
      text: |
        :white_check_mark: Smoke tests for platform opensearch on staging PASSED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>

- name: deploy-opensearch-staging
  serial_groups: [bosh-staging]
  plan:
  - in_parallel:
    - get: pipeline-tasks
    - get: common-secrets
      resource: common-staging
      trigger: true
    - get: opensearch-config
      trigger: true
      passed: [smoke-tests-development]
    - get: opensearch-for-cloudfoundry-release
      trigger: true
      passed: [smoke-tests-development, smoke-tests-login-development]
    - get: opensearch-release
      trigger: true
      passed: [smoke-tests-development]
    - get: prometheus-release
      trigger: true
      passed: [smoke-tests-development]
    - get: oauth2-proxy-release
      trigger: true
      passed: [smoke-tests-development]
    - get: secureproxy-release
      trigger: true
      passed: [smoke-tests-development]
    - get: opensearch-stemcell-jammy
      trigger: true
      passed: [smoke-tests-development]
    - get: terraform-yaml
      resource: terraform-yaml-staging
  - task: opensearch-manifest
    config:
      <<: *manifest-config
      run:
        path: sh
        args:
        - -exc
        - |
          SPRUCE_FILE_BASE_PATH=opensearch-config spruce merge \
            --prune terraform_outputs \
            opensearch-config/opensearch-deployment.yml \
            opensearch-config/opensearch-jobs.yml \
            common-secrets/opensearch-staging.yml \
            opensearch-config/opensearch-staging.yml \
            terraform-yaml/state.yml \
            > opensearch-manifest/manifest.yml
      outputs:
      - name: opensearch-manifest
      params:
        CF_USERNAME: ((cf-username-staging))
        CF_PASSWORD: ((cf-password-staging))
        CF_SYSTEM_DOMAIN: ((cf-system-domain-staging))
  - put: opensearch-staging-deployment
    params:
      manifest: opensearch-manifest/manifest.yml
      releases:
      - opensearch-release/*.tgz
      - opensearch-for-cloudfoundry-release/*.tgz
      - prometheus-release/*.tgz
      stemcells:
      - opensearch-stemcell-jammy/*.tgz
      ops_files:
      - opensearch-config/nats-tls-stage.yml
  on_failure:
    put: slack
    params:
      <<: *slack-params
      text: |
        :x: FAILED to deploy opensearch on staging
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
  on_success:
    put: slack
    params:
      <<: *slack-params
      text: |
        :white_check_mark: Successfully deployed opensearch on staging
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>

- name: smoke-tests-staging
  serial_groups: [bosh-staging]
  plan:
  - in_parallel:
    - get: common
      resource: master-bosh-root-cert
    - get: pipeline-tasks
    - get: opensearch-config
      trigger: true
      passed: [deploy-opensearch-staging]
    - get: opensearch-for-cloudfoundry-release
      trigger: true
      passed: [deploy-opensearch-staging]
    - get: opensearch-release
      trigger: true
      passed: [deploy-opensearch-staging]
    - get: prometheus-release
      trigger: true
      passed: [deploy-opensearch-staging]
    - get: oauth2-proxy-release
      trigger: true
      passed: [deploy-opensearch-staging]
    - get: secureproxy-release
      trigger: true
      passed: [deploy-opensearch-staging]
    - get: opensearch-stemcell-jammy
      trigger: true
      passed: [deploy-opensearch-staging]
    - get: opensearch-staging-deployment
      trigger: true
    - get: tests-timer
      trigger: true
  - task: smoke-tests
    file: pipeline-tasks/bosh-errand.yml
    params:
      BOSH_ENVIRONMENT: ((bosh.staging.environment))
      BOSH_CLIENT: ((bosh.staging.client))
      BOSH_CLIENT_SECRET: ((bosh.staging.client-secret))
      BOSH_DEPLOYMENT: ((opensearch.staging.name))
      BOSH_ERRAND: ((opensearch.staging.smoke-tests))
      BOSH_FLAGS: "--keep-alive"
      BOSH_CA_CERT: common/master-bosh.crt
  on_failure:
    put: slack
    params:
      <<: *slack-params
      text: |
        :x: Smoke tests for opensearch on staging FAILED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
  on_success:
    put: slack
    params:
      <<: *slack-params
      channel: '#cg-platform-news'
      text: |
        :white_check_mark: Smoke tests for opensearch on staging PASSED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>

- name: smoke-tests-login-staging
  serial_groups: [bosh-staging]
  plan:
  - in_parallel:
    - get: pipeline-tasks
    - get: opensearch-config
      trigger: true
      passed: [deploy-opensearch-staging]
    - get: opensearch-for-cloudfoundry-release
      trigger: true
      passed: [deploy-opensearch-staging]
    - get: opensearch-release
      trigger: true
      passed: [deploy-opensearch-staging]
    - get: prometheus-release
      trigger: true
      passed: [deploy-opensearch-staging]
    - get: oauth2-proxy-release
      trigger: true
      passed: [deploy-opensearch-staging]
    - get: secureproxy-release
      trigger: true
      passed: [deploy-opensearch-staging]
    - get: opensearch-stemcell-jammy
      trigger: true
      passed: [deploy-opensearch-staging]
    - get: opensearch-staging-deployment
      trigger: true
    - get: tests-timer
      trigger: true
  - task: smoke-tests-login
    file: opensearch-config/ci/smoke-tests-login.yml
    params:
      CF_USERNAME: ((cf-username-staging))
      CF_PASSWORD: ((cf-password-staging))
      CF_SYSTEM_DOMAIN: ((cf-system-domain-staging))
  on_failure:
    put: slack
    params:
      <<: *slack-params
      text: |
        :x: Login smoke tests for opensearch on staging FAILED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
  on_success:
    put: slack
    params:
      <<: *slack-params
      channel: '#cg-platform-news'
      text: |
        :white_check_mark: Login smoke tests for opensearch on staging PASSED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>

- name: deploy-opensearch-platform-production
  serial_groups: [bosh-platform-production]
  plan:
  - in_parallel:
    - get: pipeline-tasks
    - get: common-secrets
      resource: common-platform-production
    - get: opensearch-config
      passed: [smoke-tests-platform-staging]
    - get: opensearch-release
      passed: [smoke-tests-platform-staging]
    - get: opensearch-for-cloudfoundry-release
      passed: [smoke-tests-platform-staging]
    - get: prometheus-release
      passed: [smoke-tests-platform-staging]
    - get: oauth2-proxy-release
      passed: [smoke-tests-platform-staging]
    - get: secureproxy-release
      passed: [smoke-tests-platform-staging]
    - get: opensearch-platform-stemcell-jammy
      passed: [smoke-tests-platform-staging]
    - get: opensearch-platform-staging-deployment
    - get: terraform-yaml
      resource: terraform-yaml-production
  - task: opensearch-manifest
    config:
      <<: *manifest-config
      run:
        path: sh
        args:
        - -exc
        - |
          SPRUCE_FILE_BASE_PATH=opensearch-config spruce merge \
            --prune terraform_outputs \
            opensearch-config/opensearch-platform-deployment.yml \
            opensearch-config/opensearch-platform-jobs.yml \
            common-secrets/opensearch-platform-production.yml \
            opensearch-config/opensearch-platform-production.yml \
            terraform-yaml/state.yml \
            > opensearch-manifest/manifest.yml
      outputs:
      - name: opensearch-manifest
      params:
        CF_USERNAME: ((cf-username-production))
        CF_PASSWORD: ((cf-password-production))
        CF_SYSTEM_DOMAIN: ((cf-system-domain-production))
  - put: opensearch-platform-production-deployment
    params: *deploy-params-platform
  on_failure:
    put: slack
    params:
      <<: *slack-params
      text: |
        :x: FAILED to deploy platform opensearch on production
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
  on_success:
    put: slack
    params:
      <<: *slack-params
      text: |
        :white_check_mark: Successfully deployed platform opensearch on production
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>

- name: smoke-tests-platform-production
  serial_groups: [bosh-platform-production]
  plan:
  - in_parallel:
    - get: common
      resource: master-bosh-root-cert
    - get: pipeline-tasks
    - get: opensearch-config
      trigger: true
      passed: [deploy-opensearch-platform-production]
    - get: opensearch-release
      trigger: true
      passed: [deploy-opensearch-platform-production]
    - get: opensearch-for-cloudfoundry-release
      trigger: true
      passed: [deploy-opensearch-platform-production]
    - get: prometheus-release
      trigger: true
      passed: [deploy-opensearch-platform-production]
    - get: oauth2-proxy-release
      trigger: true
      passed: [deploy-opensearch-platform-production]
    - get: secureproxy-release
      trigger: true
      passed: [deploy-opensearch-platform-production]
    - get: opensearch-platform-stemcell-jammy
      trigger: true
      passed: [deploy-opensearch-platform-production]
    - get: opensearch-platform-production-deployment
      trigger: true
    - get: tests-timer
      trigger: true
  - task: smoke-tests
    file: pipeline-tasks/bosh-errand.yml
    params:
      BOSH_ENVIRONMENT: ((bosh.production.environment))
      BOSH_CLIENT: ((bosh.production.client))
      BOSH_CLIENT_SECRET: ((bosh.production.client-secret))
      BOSH_DEPLOYMENT: ((opensearch-platform.production.name))
      BOSH_ERRAND: ((opensearch-platform.production.smoke-tests))
      BOSH_FLAGS: "--keep-alive"
      BOSH_CA_CERT: common/master-bosh.crt
  on_failure:
    put: slack
    params:
      <<: *slack-params
      channel: '#cg-platform'
      text: |
        :x: Smoke tests for platform opensearch on production FAILED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
  on_success:
    put: slack
    params:
      <<: *slack-params
      channel: '#cg-platform-news'
      text: |
        :white_check_mark: Smoke tests for platform opensearch on production PASSED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>

- name: deploy-opensearch-production
  serial_groups: [bosh-production]
  plan:
  - in_parallel:
    - get: pipeline-tasks
    - get: common-secrets
      resource: common-prod
    - get: opensearch-config
      passed: [smoke-tests-staging]
    - get: opensearch-for-cloudfoundry-release
      passed: [smoke-tests-staging, smoke-tests-login-staging]
    - get: opensearch-release
      passed: [smoke-tests-staging]
    - get: prometheus-release
      passed: [smoke-tests-staging]
    - get: oauth2-proxy-release
      passed: [smoke-tests-staging]
    - get: secureproxy-release
      passed: [smoke-tests-staging]
    - get: opensearch-stemcell-jammy
      passed: [smoke-tests-staging]
    - get: opensearch-staging-deployment
    - get: terraform-yaml
      resource: terraform-yaml-production
  - task: opensearch-manifest
    config:
      <<: *manifest-config
      run:
        path: sh
        args:
        - -exc
        - |
          SPRUCE_FILE_BASE_PATH=opensearch-config spruce merge \
            --prune terraform_outputs \
            opensearch-config/opensearch-deployment.yml \
            opensearch-config/opensearch-jobs.yml \
            common-secrets/opensearch-production.yml \
            opensearch-config/opensearch-production.yml \
            terraform-yaml/state.yml \
            > opensearch-manifest/manifest.yml
      params:
        CF_USERNAME: ((cf-username-production))
        CF_PASSWORD: ((cf-password-production))
        CF_SYSTEM_DOMAIN: ((cf-system-domain-production))
  - put: opensearch-production-deployment
    params:
      manifest: opensearch-manifest/manifest.yml
      releases:
      - opensearch-release/*.tgz
      - opensearch-for-cloudfoundry-release/*.tgz
      - prometheus-release/*.tgz
      stemcells:
      - opensearch-stemcell-jammy/*.tgz
      ops_files:
      - opensearch-config/nats-tls-prod.yml
  on_failure:
    put: slack
    params:
      <<: *slack-params
      text: |
        :x: FAILED to deploy opensearch on production
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
  on_success:
    put: slack
    params:
      <<: *slack-params
      text: |
        :white_check_mark: Successfully deployed opensearch on production
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>

- name: smoke-tests-production
  serial_groups: [bosh-production]
  plan:
  - in_parallel:
    - get: pipeline-tasks
    - get: common
      resource: master-bosh-root-cert
    - get: opensearch-config
      trigger: true
      passed: [deploy-opensearch-production]
    - get: opensearch-for-cloudfoundry-release
      trigger: true
      passed: [deploy-opensearch-production]
    - get: opensearch-release
      trigger: true
      passed: [deploy-opensearch-production]
    - get: prometheus-release
      trigger: true
      passed: [deploy-opensearch-production]
    - get: oauth2-proxy-release
      trigger: true
      passed: [deploy-opensearch-production]
    - get: secureproxy-release
      trigger: true
      passed: [deploy-opensearch-production]
    - get: opensearch-stemcell-jammy
      trigger: true
      passed: [deploy-opensearch-production]
    - get: opensearch-production-deployment
      trigger: true
    - get: tests-timer
      trigger: true
  - task: smoke-tests
    file: pipeline-tasks/bosh-errand.yml
    params:
      BOSH_ENVIRONMENT: ((bosh.production.environment))
      BOSH_CLIENT: ((bosh.production.client))
      BOSH_CLIENT_SECRET: ((bosh.production.client-secret))
      BOSH_DEPLOYMENT: ((opensearch.production.name))
      BOSH_ERRAND: ((opensearch.production.smoke-tests))
      BOSH_FLAGS: "--keep-alive"
      BOSH_CA_CERT: common/master-bosh.crt
  on_failure:
    put: slack
    params:
      <<: *slack-params
      channel: '#cg-platform'
      text: |
        :x: Smoke tests for opensearch on production FAILED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
  on_success:
    put: slack
    params:
      <<: *slack-params
      channel: '#cg-platform-news'
      text: |
        :white_check_mark: Smoke tests for opensearch on production PASSED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>

- name: smoke-tests-login-production
  serial_groups: [bosh-production]
  plan:
  - in_parallel:
    - get: pipeline-tasks
    - get: opensearch-config
      trigger: true
      passed: [deploy-opensearch-production]
    - get: opensearch-for-cloudfoundry-release
      trigger: true
      passed: [deploy-opensearch-production]
    - get: opensearch-release
      trigger: true
      passed: [deploy-opensearch-production]
    - get: prometheus-release
      trigger: true
      passed: [deploy-opensearch-production]
    - get: oauth2-proxy-release
      trigger: true
      passed: [deploy-opensearch-production]
    - get: secureproxy-release
      trigger: true
      passed: [deploy-opensearch-production]
    - get: opensearch-stemcell-jammy
      trigger: true
      passed: [deploy-opensearch-production]
    - get: opensearch-production-deployment
      trigger: true
    - get: tests-timer
      trigger: true
  - task: smoke-tests-login
    file: opensearch-config/ci/smoke-tests-login.yml
    params:
      CF_USERNAME: ((cf-username-production))
      CF_PASSWORD: ((cf-password-production))
      CF_SYSTEM_DOMAIN: ((cf-system-domain-production))
  on_failure:
    put: slack
    params:
      <<: *slack-params
      channel: '#cg-platform-news'
      text: |
        :x: Login smoke tests for opensearch on production FAILED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
  on_success:
    put: slack
    params:
      <<: *slack-params
      channel: '#cg-platform-news'
      text: |
        :white_check_mark: Login smoke tests for opensearch on production PASSED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>

- name: check-backup-development-tenant
  plan:
  - in_parallel:
    - get: check-backup-timer
      trigger: true
    - get: opensearch-config
  - task: check-backup
    file: opensearch-config/ci/check-backup.yml
    tags: [iaas]
    params:
      AWS_DEFAULT_REGION: ((aws-region))
      ES_HOST: ((opensearch-development-check-backup-es-host))
      GATEWAY_HOST: prometheus-staging.service.cf.internal
      BUCKET_NAME: opensearch-cf-development
      ENVIRONMENT: development-tenant
      INDEX_PATTERN: logs-app-*

- name: check-backup-development-platform
  plan:
  - in_parallel:
    - get: check-backup-timer
      trigger: true
    - get: opensearch-config
  - task: check-backup
    file: opensearch-config/ci/check-backup.yml
    params:
      ES_HOST: ((opensearch-development-platform-check-backup-es-host))
      GATEWAY_HOST: prometheus-staging.service.cf.internal
      ENVIRONMENT: development-platform
      INDEX_PATTERN: logs-platform-*

- name: check-backup-staging-tenant
  plan:
  - in_parallel:
    - get: check-backup-timer
      trigger: true
    - get: opensearch-config
  - task: check-backup
    file: opensearch-config/ci/check-backup.yml
    tags: [iaas]
    params:
      AWS_DEFAULT_REGION: ((aws-region))
      ES_HOST: ((opensearch-staging-check-backup-es-host))
      GATEWAY_HOST: prometheus-staging.service.cf.internal
      BUCKET_NAME: opensearch-cf-staging
      ENVIRONMENT: staging-tenant
      INDEX_PATTERN: logs-app-*

- name: check-backup-staging-platform
  plan:
  - in_parallel:
    - get: check-backup-timer
      trigger: true
    - get: opensearch-config
  - task: check-backup
    file: opensearch-config/ci/check-backup.yml
    params:
      ES_HOST: ((opensearch-staging-platform-check-backup-es-host))
      GATEWAY_HOST: prometheus-staging.service.cf.internal
      ENVIRONMENT: development-platform
      INDEX_PATTERN: logs-platform-*

- name: check-backup-production-tenant
  plan:
  - in_parallel:
    - get: check-backup-timer
      trigger: true
    - get: opensearch-config
  - task: check-backup
    file: opensearch-config/ci/check-backup.yml
    tags: [iaas]
    params:
      AWS_DEFAULT_REGION: ((aws-region))
      ES_HOST: ((opensearch-production-check-backup-es-host))
      GATEWAY_HOST: prometheus-production.service.cf.internal
      BUCKET_NAME: opensearch-cf-production
      ENVIRONMENT: production-tenant
      INDEX_PATTERN: logs-app-*

- name: check-backup-production-platform
  plan:
  - in_parallel:
    - get: check-backup-timer
      trigger: true
    - get: opensearch-config
  - task: check-backup
    file: opensearch-config/ci/check-backup.yml
    params:
      ES_HOST: ((opensearch-production-platform-check-backup-es-host))
      GATEWAY_HOST: prometheus-production.service.cf.internal
      ENVIRONMENT: production-platform
      INDEX_PATTERN: logs-platform-*

resources:
- name: opensearch-release-git-repo
  type: git
  source:
    commit_verification_keys: ((cloud-gov-pgp-keys))
    uri: https://github.com/cloud-gov/opensearch-boshrelease
    branch: develop

- name: opensearch-final-builds-dir-tarball
  type: s3-iam
  source:
    bucket: ((cg-s3-bosh-releases-bucket))
    versioned_file: final-builds-dir-opensearch.tgz
    region_name: ((aws-region))
    server_side_encryption: AES256

- name: opensearch-releases-dir-tarball
  type: s3-iam
  source:
    bucket: ((cg-s3-bosh-releases-bucket))
    versioned_file: releases-dir-opensearch.tgz
    region_name: ((aws-region))
    server_side_encryption: AES256

- name: opensearch-for-cloudfoundry-release-git-repo
  type: git
  source:
    commit_verification_keys: ((cloud-gov-pgp-keys))
    uri: https://github.com/cloud-gov/opensearch-for-cloudfoundry
    branch: develop

- name: opensearch-for-cloudfoundry-final-builds-dir-tarball
  type: s3-iam
  source:
    bucket: ((cg-s3-bosh-releases-bucket))
    versioned_file: final-builds-dir-opensearch-for-cloudfoundry.tgz
    region_name: ((aws-region))
    server_side_encryption: AES256

- name: opensearch-for-cloudfoundry-releases-dir-tarball
  type: s3-iam
  source:
    bucket: ((cg-s3-bosh-releases-bucket))
    versioned_file: releases-dir-opensearch-for-cloudfoundry.tgz
    region_name: ((aws-region))
    server_side_encryption: AES256

- name: master-bosh-root-cert
  type: s3-iam
  source:
    bucket: ((opensearch-private-bucket))
    region_name: ((aws-region))
    versioned_file: master-bosh.crt

- name: common-development
  type: s3-iam
  source:
    bucket: ((opensearch-private-bucket))
    versioned_file: opensearch-development.yml
    region_name: ((aws-region))

- name: common-staging
  type: s3-iam
  source:
    bucket: ((opensearch-private-bucket))
    versioned_file: opensearch-staging.yml
    region_name: ((aws-region))

- name: common-prod
  type: s3-iam
  source:
    bucket: ((opensearch-private-bucket))
    versioned_file: opensearch-production.yml
    region_name: ((aws-region))

- name: common-platform-development
  type: s3-iam
  source:
    bucket: ((opensearch-private-bucket))
    versioned_file: opensearch-platform-development.yml
    region_name: ((aws-region))

- name: common-platform-staging
  type: s3-iam
  source:
    bucket: ((opensearch-private-bucket))
    versioned_file: opensearch-platform-staging.yml
    region_name: ((aws-region))

- name: common-platform-production
  type: s3-iam
  source:
    bucket: ((opensearch-private-bucket))
    versioned_file: opensearch-platform-production.yml
    region_name: ((aws-region))

- name: opensearch-release
  type: s3-iam
  source:
    bucket: ((cg-s3-bosh-releases-bucket))
    regexp: opensearch-([\d\.]*).tgz
    region_name: ((aws-region))
    server_side_encryption: AES256

- name: opensearch-for-cloudfoundry-release
  type: s3-iam
  source:
    bucket: ((cg-s3-bosh-releases-bucket))
    regexp: opensearch-for-cloudfoundry-(.*).tgz
    region_name: ((aws-region))
    server_side_encryption: AES256

- name: oauth2-proxy-release
  type: s3-iam
  source:
    bucket: ((cg-s3-bosh-releases-bucket))
    regexp: oauth2-proxy-(.*).tgz
    region_name: ((aws-region))

- name: secureproxy-release
  type: s3-iam
  source:
    bucket: ((cg-s3-bosh-releases-bucket))
    regexp: secureproxy-(.*).tgz
    region_name: ((aws-region))

- name: prometheus-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-community/prometheus-boshrelease

- name: opensearch-config
  type: git
  source:
    commit_verification_keys: ((cloud-gov-pgp-keys))
    uri: ((cg-deploy-opensearch-git-url))

- name: opensearch-stemcell-jammy
  source:
    name: bosh-aws-xen-hvm-ubuntu-jammy-go_agent
  type: bosh-io-stemcell

- name: opensearch-platform-stemcell-jammy
  source:
    name: bosh-aws-xen-hvm-ubuntu-jammy-go_agent
  type: bosh-io-stemcell

- name: opensearch-development-deployment
  type: bosh-deployment
  source: &bosh-params-development
    target: ((opensearch-development-deployment-bosh-target))
    client: ((opensearch-development-deployment-bosh-client))
    client_secret: ((opensearch-development-deployment-bosh-client-secret))
    ca_cert: ((opensearch-development-ca-cert))
    deployment: opensearch

- name: opensearch-staging-deployment
  type: bosh-deployment
  source: &bosh-params-staging
    target: ((opensearch-staging-deployment-bosh-target))
    client: ((opensearch-staging-deployment-bosh-client))
    client_secret: ((opensearch-staging-deployment-bosh-client-secret))
    ca_cert: ((opensearch-staging-ca-cert))
    deployment: opensearch

- name: opensearch-production-deployment
  type: bosh-deployment
  source: &bosh-params-production
    target: ((opensearch-production-deployment-bosh-target))
    client: ((opensearch-production-deployment-bosh-client))
    client_secret: ((opensearch-production-deployment-bosh-client-secret))
    ca_cert: ((opensearch-production-ca-cert))
    deployment: opensearch

- name: opensearch-platform-development-deployment
  type: bosh-deployment
  source:
    <<: *bosh-params-development
    deployment: opensearch-platform

- name: opensearch-platform-staging-deployment
  type: bosh-deployment
  source:
    <<: *bosh-params-staging
    deployment: opensearch-platform

- name: opensearch-platform-production-deployment
  type: bosh-deployment
  source:
    <<: *bosh-params-production
    deployment: opensearch-platform

- name: pipeline-tasks
  type: git
  source:
    commit_verification_keys: ((cloud-gov-pgp-keys))
    uri: ((pipeline-tasks-git-url))
    branch: ((pipeline-tasks-git-branch))

- name: slack
  type: slack-notification
  source:
    url: ((slack-webhook-url))

- name: tests-timer
  type: time
  source:
    interval: 30m

- name: check-backup-timer
  type: time
  source:
    interval: 30m

- name: terraform-yaml-development
  type: s3-iam
  source:
    bucket: ((tf-state-bucket-development))
    versioned_file: ((tf-state-file-development))
    region_name: ((aws-region))

- name: terraform-yaml-staging
  type: s3-iam
  source:
    bucket: ((tf-state-bucket-staging))
    versioned_file: ((tf-state-file-staging))
    region_name: ((aws-region))

- name: terraform-yaml-production
  type: s3-iam
  source:
    bucket: ((tf-state-bucket-production))
    versioned_file: ((tf-state-file-production))
    region_name: ((aws-region))

resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource

- name: bosh-deployment
  type: docker-image
  source:
    repository: cloudfoundry/bosh-deployment-resource

- name: s3-iam
  type: docker-image
  source:
    repository: 18fgsa/s3-resource
